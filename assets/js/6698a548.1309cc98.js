"use strict";(self.webpackChunkx=self.webpackChunkx||[]).push([["934"],{1873:function(e,n,r){r.r(n),r.d(n,{frontMatter:()=>a,default:()=>m,contentTitle:()=>l,assets:()=>o,toc:()=>d,metadata:()=>t});var t=JSON.parse('{"id":"code-samples/multiple-devices","title":"Multiple Devices","description":"You might have multiple devices with identical configurations, differing only by name (e.g., thermometers spread across your home).","source":"@site/docs/04-code-samples/multiple-devices.md","sourceDirName":"04-code-samples","slug":"/code-samples/multiple-devices","permalink":"/docs/code-samples/multiple-devices","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/04-code-samples/multiple-devices.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Multiple Components","permalink":"/docs/code-samples/multiple-components"},"next":{"title":"Tutorial - Extras","permalink":"/docs/category/tutorial---extras"}}'),i=r(5893),s=r(65);let a={},l="Multiple Devices",o={},d=[{value:"Single Device with Many Similar Sensors",id:"single-device-with-many-similar-sensors",level:3}];function c(e){let n={code:"code",h1:"h1",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"multiple-devices",children:"Multiple Devices"})}),"\n",(0,i.jsx)(n.p,{children:"You might have multiple devices with identical configurations, differing only by name (e.g., thermometers spread across your home)."}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Create an ",(0,i.jsx)(n.code,{children:".eta"})," template shared by all devices."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'# .lib/my-device.eta\r\nesphome:\r\n  name: <%= it.name %>\r\n\r\nsensor:\r\n  - platform: dht\r\n    pin: D2\r\n    temperature:\r\n      name: "Temperature"\r\n    humidity:\r\n      name: "Humidity"\r\n    update_interval: <%= it.update_interval %>\n'})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:"Create a file for each device:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"# Living Room/index.eta\r\n<%~ include('../.lib/my-device', \r\n{ \r\n    name: 'Living Room', \r\n    update_interval: '60s'\r\n}) %>\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"# Kitchen/index.eta\r\n<%~ include('../.lib/my-device', \r\n{ \r\n    name: 'Kitchen', \r\n    update_interval: '30s'\r\n}) %>\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"# Bathroom/index.eta\r\n<%~ include('../.lib/my-device', \r\n{ \r\n    name: 'Bathroom', \r\n    update_interval: '30s'\r\n}) %>\n"})}),"\n",(0,i.jsx)(n.h3,{id:"single-device-with-many-similar-sensors",children:"Single Device with Many Similar Sensors"}),"\n",(0,i.jsx)(n.p,{children:"You might have a PLC-like device with many identical inputs/outputs."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"# PLC/.lib/plc.eta\r\n<%- \r\n  const toHex = (number, digits) => number?.toString(16)?.padStart(digits, '0');\r\n  const inputStartAddress = 0x00C0;\r\n  const outputStartAddress = 0x0070;\r\n%>\r\nuart:\r\n  tx_pin: 43\r\n  rx_pin: 44\r\n  baud_rate: 115200\r\nmodbus:\r\n  - id: mb_main\r\n    flow_control_pin: 2\r\nmodbus_controller:\r\n  - id: mbc_1\r\n    address: 0x1\r\n    modbus_id: mb_main\r\n    update_interval: 50ms\r\n\r\nbinary_sensor:\r\n<%- for (let i = 0; i < it.inputs; i++) { \r\n    const offset = Math.trunc(i/16);\r\n    const bit = i%16; \r\n%>\r\n  - platform: modbus_controller\r\n    modbus_controller_id: mbc_1\r\n    id: input_0x<%= toHex(i+1, 2) %>\r\n    register_type: holding\r\n    address: 0x<%= toHex(inputStartAddress + offset, 4) %>\r\n    bitmask: 0x<%= toHex(1 << bit, 4) %> # bit (<%= bit %>)\r\n<%- } %>\r\n\r\nswitch:\r\n<%- for (let i = 0; i < it.outputs; i++) { \r\n    const offset = Math.trunc(i/16);\r\n    const bit = i%16; \r\n%>\r\n  - platform: modbus_controller\r\n    modbus_controller_id: mbc_1\r\n    id: output_0x<%= toHex(i+1, 2) %>\r\n    register_type: holding\r\n    address: 0x<%= toHex(outputStartAddress + offset, 4) %>\r\n    bitmask: 0x<%= toHex(1 << bit, 4) %> # bit (<%= bit %>)\r\n<%_ } _%>\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"# PLC/plc.eta\r\n<%~ include('./.lib/plc', { \r\n  outputs: 32,\r\n  inputs: 32\r\n}) %>\n"})})]})}function m(e={}){let{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},65:function(e,n,r){r.d(n,{Z:()=>l,a:()=>a});var t=r(7294);let i={},s=t.createContext(i);function a(e){let n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);